This is a backend for workflow (business process) management system. You can setup several workflows (step by step, workpoint by workpoint) for your own business process. At each workpoint you can assign output filters (conditions which ensure that the task at this step of the workflow is solved). After this just assign workers (your employees) to each workpoint, and run your first business task through it!

# Message
  create_table "messages"
    t.text     "content",
    t.integer  "sender_id" // юзер-отправитель, который выполнил работу на workpoint и нажал complete на конкретном out-е
    t.integer  "sender_out_id" // на каком ауте оно было "completed" (закончено и отправлено)
    t.integer  "sender_workpoint_id" // проставляется бэкэндом в справочных целях, исходя из out_id
    t.integer  "recipient_workpoint_id" // воркпоинт-получатель, проставляется бэкэндом исходя из next_workpoint_id у воркпоинта
    t.integer  "recipient_id" // проставляется бэкэндом в момент назначения рандомного исполнителя на воркпоинте-получателе
    t.boolean  "completed" // проставляется бэкэндом
    t.boolean  "accepted" // проставляется бэкэндом
  end

# Document = сущность, путешествующая по процессам прицепленной к сообщениям, по сути - это ресурс со ссылкой на внешний REST-API
  create_table "documents"
    t.string  "type"
    t.string  "base_url" // базовый URL REST-API удалённого ресурса
    t.integer "foreign_id" // id удалённого ресурса, например 28
  end

# Attach = сущность, фиксирующая факт присоединения документа к конкретному сообщению
  create_table "attaches"
    t.integer "message_id"
    t.string  "attachable_type" // любая сущность в системе, например тот же Document
    t.integer "attachable_id"
  end

# User, имеет много воркпоинтов
  create_table "users"
    t.string   "login"
    t.string   "password" // виртуальное свойство
  end

# Workflow, имеет много воркпоинтов
  create_table "workflows"
    t.string   "title"
  end

# Workpoint, принадлежит одному воркфлоу, имеет много юзеров
  create_table "workpoints"
    t.string   "title"
    t.integer  "workflow_id"
  end

# Exit (out) from workpoint, actually - link to next workpoint
  create_table "outs"
    t.string   "title"
    t.integer  "workpoint_id"
    t.integer  "next_workpoint_id" // следующий workpoint в цепочке, на который бэкэнд будет отправлять сообщения в момент complete на данном out-e
  end

# Messagefact - entity that fix fact of receiving message at specific workpoint

# example:
Completemessagefact.create(
        :message => @m2,
        :out     => @wp1.outs.first
    ).cloned_message

